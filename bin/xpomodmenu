#!/bin/sh

#
# xpomodmenu - X11 menu to control Lucas de Sena's pomod Pomodoro timer
#
# CHANGE LOG:
#
# v0.1   - 2024-12-20 - Morgan Aldridge <morgant@makkintosshu.com>
#                       Initial version.
# v0.3   - 2025-01-06   Updated to launch new xpomoinfo utility when
#                       timer menu item is selected.
#
# LICENSE:
#
# Copyright (c) 2024-2025 Morgan Aldridge
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

PIXMAP_PATH="${PIXMAP_PATH:-pixmap/}"

_pomod_state=""
_pomod_time=""

_pomod_connect() {
  _pomod_info="$(pomo info)"
  if [ $? -gt 0 ] ; then
    _pomod_state="error"
    _pomod_time=""
  else
    _pomod_state="${_pomod_info%%: *}"
    _pomod_time="${_pomod_info##*: }"
    [ "$_pomod_state" = "stopped" ] && _pomod_time="00:00"
  fi
}

_is_pomod_connected() {
  [ -n "$_pomod_state" ] && [ $_pomod_state != "error" ]
}

_xmenu_item_separator() {
  printf "\n"
}

_xmenu_item() {
  printf "%s\t%s\n" "$1" "$2"
}

_xmenu_item_icon() {
  printf "%s\t%s\t%s\n" "IMG:${PIXMAP_PATH}${1}.png" "$2" "$3"
}

_xmenu_item_noop() {
  _xmenu_item "$1" ":"
}

_xmenu_item_noop_icon() {
  _xmenu_item_icon "$1" "$2" ":"
}

_xmenu_pomo_state() {
  case "$_pomod_state" in
    stopped)
      _xmenu_item_noop_icon "control_stop_blue" "No Active Pomodoro"
      _xmenu_item_separator
      _xmenu_item_icon "time" "$_pomod_time" "xpomoinfo &"
      ;;
    pomodoro|shortbreak|longbreak)
      _description=""
      case "$_pomod_state" in
        pomodoro) _description="Focus" ;;
        shortbreak) _description="Break (Short)" ;;
        longbreak) _description="Break (Long)" ;;
      esac
      _xmenu_item_noop_icon "control_play_blue" "Current Pomodoro: ${_description}"
      _xmenu_item_separator
      _xmenu_item_icon "time" "$_pomod_time" "xpomoinfo &"
      ;;
    *)
      _xmenu_item_noop_icon "error" "CONFIGURATION ERROR"
      ;;
  esac
}

_xmenu_pomo_action() {
  case "$_pomod_state" in
    stopped)
      _xmenu_item_separator
      _xmenu_item_icon "control_play" "Start New Pomodoro" "pomo start"
      ;;
    pomodoro|shortbreak|longbreak)
      _xmenu_item_separator
      _xmenu_item_icon "control_stop" "Stop Current Pomodoro" "pomo stop"
      ;;
  esac
}

_wmlaunchbutton_xmenu_position() {
  _icon_geometry="$(printenv BUTTON_GEOMETRY)"
  _icon_padding="$(printenv BUTTON_GEOMETRY_PADDING)"
  _icon_padding="${_icon_padding:-0}"
  [ -n "$_icon_geometry" ] && echo "$_icon_geometry" | while IFS=x+ read -r _w _h _x _y ; do
    _top="$(( _y + _h + _icon_padding ))"
    [ "$_x" -ge "$_icon_padding" ] && _left="$(( _x - _icon_padding ))" || _left="$_x"
    printf "-p %sx%s" "$_left" "$_top"
  done
}

_pomod_connect
#printf "_pomod_state: '%s'\n_pomod_time: '%s'\n" "$_pomod_state" "$_pomod_time"

xmenu $(_wmlaunchbutton_xmenu_position) <<EOF | sh
$(_xmenu_pomo_state)
$(_xmenu_pomo_action)
EOF
